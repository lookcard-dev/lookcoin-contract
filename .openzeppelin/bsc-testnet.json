{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xbb3ede4eE25900b260877C0F20e3DFD6D718c342",
      "txHash": "0xa4f3b86a3e743460077d55eb53e96c0dca40be062a4cf7bdd1cf50b31bbc1c31",
      "kind": "uups"
    },
    {
      "address": "0xA83c8E40adD558597644784Ac57a3dDADF89b9Fd",
      "txHash": "0x24568aa35633a0cabeae9815fe3f75b865c1aacbc83e963ed28b507764f28575",
      "kind": "uups"
    },
    {
      "address": "0x90BE1aa8ad442dbF1440d3A831E52b6Ce0b1236b",
      "txHash": "0x8a0eeb2593e8f73e9de897f3c81c44227aaea4c1f34007d8d3ba2dcec3a6398e",
      "kind": "uups"
    },
    {
      "address": "0xF936F96de720753D01B27C8Bb4805bE9714D612e",
      "txHash": "0x8d58da76d97f528c62f7bc6930f82cbaff27c30d865b57696dd45982de505967",
      "kind": "uups"
    },
    {
      "address": "0x12EbF0ca24831d0553C073289F13E1cc014B29fF",
      "txHash": "0xba0da652f3c72441c65a4b14ef51aec04121cda967c65da3aef28159c44bedf2",
      "kind": "uups"
    },
    {
      "address": "0x8e54F5345E7710c58aD7a888e9319Da7aBdB4A21",
      "txHash": "0x475d7ab151e1bf8c22bf83577d198d6968989fd73c90e310adccd82858e798c6",
      "kind": "uups"
    },
    {
      "address": "0x3D8816060f1e59e1586A78F0F2b5559Cb352e1e2",
      "txHash": "0x39fc487ce915ae553ee3213f06bed1c39ef0213f0dd1374d132c52b4243b6810",
      "kind": "uups"
    },
    {
      "address": "0xeB9E7dEb894b60f1A5739D63b75B3cc681988A40",
      "txHash": "0x2bb593a7487677983a246637285e4badb6bb0c606a0a15a84f58bd3ead5a4f3d",
      "kind": "uups"
    },
    {
      "address": "0x201B728CB2319b6cFf6b3644fDC51A1D1cBD127E",
      "txHash": "0x14b08e6b14f6a43720ecf261ceca3586655cb32d93c66b7f3ea1d7250c7582e8",
      "kind": "uups"
    },
    {
      "address": "0xA2134039C3388F7254f8332de61675C70CBBB868",
      "txHash": "0x191be040082233fd88971635ddfb9c0a7246fbf7fc3bf26391217535008a5c43",
      "kind": "uups"
    },
    {
      "address": "0x89965583311f858F9bBdb3cFb8367a28eB669147",
      "txHash": "0xe958b6ebb4b268cee08f11e89dc7b173569124466a60cd30d74f687f644a458e",
      "kind": "uups"
    },
    {
      "address": "0x80c215cB5323F7Ca47627a2341a76b92A01de258",
      "txHash": "0x4eedf47a3223fd83b56a80c7c4e17cc286a7560ab709b4952cb21891f3a24dfa",
      "kind": "uups"
    },
    {
      "address": "0x63d7bc639D66d891c20C4Bd4035C66782Ca29261",
      "txHash": "0x2e6facbdfe8a5148082b9652533757c24af4061be7965bf9c5bd981bfe1335b7",
      "kind": "uups"
    },
    {
      "address": "0x9a4D83cd3FFf546323B5bf1ED73Db15c386d3a03",
      "txHash": "0xe459a5dde513219e2424461b763c437b8e507e71b46a4e0586a4105508304e6f",
      "kind": "uups"
    },
    {
      "address": "0x2083aAd40EeE777fc8c9F6Ac000567894487A87A",
      "txHash": "0x88469f304a41dd0c626113f93c302a8f2ba0f8a82f1f5ff33e1f438c1e1f01ec",
      "kind": "uups"
    },
    {
      "address": "0xfD72f9bC05b82c3bBcE7A19A35B006379a3f5C33",
      "txHash": "0x5a0284db01fa2912f328a8b0dbad59ea4a695614223e2fd2d766492a75761e62",
      "kind": "uups"
    },
    {
      "address": "0x70Ed9a2E8fecBAcd9D2AC37418bfDb042f56bebf",
      "txHash": "0x9925decec8f33ddeec8335c431e92045f81859cc279fbca9a14e8bf3a285d4c1",
      "kind": "uups"
    },
    {
      "address": "0xA8D351300c995557AEf87a1975f05c3e7A86ffcb",
      "txHash": "0x8419967b33b7f528c04123094a0b22f805c2c8df5b84cdbe25a5a2ba18bd8a36",
      "kind": "uups"
    },
    {
      "address": "0x5b287808Fc124b8A97D5E2E93B1AD38BdbBcAb02",
      "txHash": "0xa10ca950bdda2c5d7641d803bb5afce258219d706d490d62e42213de4bd4abb9",
      "kind": "uups"
    },
    {
      "address": "0x72852C55a87604D8EF632Ab6e98F17a820d059c1",
      "txHash": "0x39b6d800401659212ebfe72103938b3400f059bed1cb7aec09dc64903da07703",
      "kind": "uups"
    },
    {
      "address": "0xfA606508655E01DCBaaDdb90D1d07A088132aE28",
      "txHash": "0xaed0b404fc8eb084439d2a00455df2347793ecc1d9c08bbd2871f0df2a6712b5",
      "kind": "uups"
    },
    {
      "address": "0x94d836e5f7077392441e2628A3Ae2c0BA504a081",
      "txHash": "0xd87a5b9ae5947b7bed2241426302b78477a7457af2401d62404c6a872a759861",
      "kind": "uups"
    },
    {
      "address": "0xA79871bd42d2828250d7462d8F4c9793a726b6f8",
      "txHash": "0x6eaa2edd410c8b68c563eada9a859eb21e95ad3108de0d0d8cfdce8585ad68f9",
      "kind": "uups"
    },
    {
      "address": "0xFd689A1510Ae0E655fC968b7E43e00830Fe47616",
      "txHash": "0x7be16793518de8e374f67b8fb0585546d99137b1d0291c0a70281f409a6d913f",
      "kind": "uups"
    },
    {
      "address": "0x600C90E68f70D01CF9b497f71892D3a4811C0be5",
      "txHash": "0xa91231465573c778b5776dde4fb3d56b5895039c6d2d4d99b9b59f8eeb93ae7c",
      "kind": "uups"
    },
    {
      "address": "0x58B9F39464c67D08ddB3edf4167b0e571426C358",
      "txHash": "0xd3c36c0d05abc8f44d199539e9c75b21c387ca2f082b74fabbdde6e4bfe6cf03",
      "kind": "uups"
    },
    {
      "address": "0x9a9c4f58F46A5BDEc923634579a98Cb1c3c94fE4",
      "txHash": "0xfdd7721c699bdfff4dc5d96c25735aaac020881569d8bd060716622764a666eb",
      "kind": "uups"
    },
    {
      "address": "0xF1fFe5f27e5955df3d8ce07c348E04F02b44ca52",
      "txHash": "0xff5fe3d392beb638613cc29f498ff5ee01dac78ca5ccba846a2f33aa7d1e3dec",
      "kind": "uups"
    },
    {
      "address": "0x27603D3F53385cEE91a7CcCb0612Db670Ed5f3dF",
      "txHash": "0x6c781ee511e5fb3928234330a7fc55af56842e0394edd5020285da68f971e4f2",
      "kind": "uups"
    },
    {
      "address": "0x5b3B31aBeA5cf7296CA57f6005411f23F20b496B",
      "txHash": "0xafe55052bf9e18d358750edb0a7b433d7defc192e334d46bb0d6457dcd36b8ac",
      "kind": "uups"
    },
    {
      "address": "0xbef5c2Ed56aa88e75591E0603bA6B2269eDbB328",
      "txHash": "0xa20fd4a29c866b603dc546334af828a52488819c410ffae2333d4c03d17e3917",
      "kind": "uups"
    },
    {
      "address": "0x054e9dC816e5bdE872115E1a8456eC571708c540",
      "txHash": "0x568e94887c8d01d68bbe9291d4e909ff9e3c20bd48cf47ac5da597891822c962",
      "kind": "uups"
    },
    {
      "address": "0xba5bC30B1A78ac61880a2311aEeE4f91aa3f2896",
      "txHash": "0xed4cce5a545e9e4251f9c955201efd9ce40cf90a2ce14ac625689d7bd32c3820",
      "kind": "uups"
    },
    {
      "address": "0x673dfB3c8c4d4B2157a47d382569a19D1513f10A",
      "txHash": "0x28d2782c59bad9e95820fc011cff00788b807034c2ad4eec5b8111a553662640",
      "kind": "uups"
    },
    {
      "address": "0xBb95A79F9d78fb12e534d38347238BCC085A2b19",
      "txHash": "0xbc3bd2d101d37d356e488a58ee6173d2621560c14e421a926a67d63446692961",
      "kind": "uups"
    },
    {
      "address": "0xB8B7604628F37D611e82D22609ACE0Ca01A14e2D",
      "txHash": "0x9abd5a10f614b2971e6d2e4f888c48ad8c530cae6a15f7f49b153a3a69e8a5b8",
      "kind": "uups"
    },
    {
      "address": "0xd6f310c307a6FF8163A94984163D541b66077004",
      "txHash": "0xa44556fff208649d2c5e1f54ba3ea7016c7a75ca9cf8c3a9a7c521566333901e",
      "kind": "uups"
    },
    {
      "address": "0x69e6AF742E4a3E4d8494FDA6F181E263fB77f741",
      "txHash": "0xaa12ca63ffb3ac0925754b0a442356891bfa54ed0d82984ff9c60844a0df6da3",
      "kind": "uups"
    },
    {
      "address": "0x03E823BE92A2526083681075430b1fd6D486D046",
      "txHash": "0x02e6b7097d2cc071d4770cd09468a90d4dd5d1147598ff0c151e150b8ccd3470",
      "kind": "uups"
    },
    {
      "address": "0x7C5e6ECE7BBb198fc59Abd98891305eE858aA2e9",
      "txHash": "0x8611cbf85183ba70d4fb42257f6e68fe37d5a3ddd2d876bab8b7aa86dc1c67ec",
      "kind": "uups"
    },
    {
      "address": "0x79b98fCecED2A468bB98FCB77c3b634af9C19978",
      "txHash": "0xb67d4db1d10ea7c647e55eeca421887a10a82a096c86666a5a81f1597bab4537",
      "kind": "uups"
    },
    {
      "address": "0x04001c7bE59A7e0F3F7b981eC4D0cbE59e56B0E1",
      "txHash": "0xb7c2ca7ce039385b49db628f9a1c5e2a49834e323535d850bb32433ce2655f57",
      "kind": "uups"
    },
    {
      "address": "0x97D543565Ab7CC09bd6643bFeD38Db56894BBAb8",
      "txHash": "0xb455ac8c42e267ba1933ba049dfe55082f42d3440d89020f8be3c1ce00da6bbc",
      "kind": "uups"
    },
    {
      "address": "0x062e72413720Fd97310E7A787284b39af9d4Ea18",
      "txHash": "0xff7b59edafbc427f7ac7d259f07c18fe3d8e0465af8fe24b6420e56d4c082037",
      "kind": "uups"
    }
  ],
  "impls": {
    "6209382296a83e235db3cdfb8a683515ce606483ac088b51c6338e6e53c41f7e": {
      "address": "0xD29Dd15530BFE25d89d446B16530dC8cDA3bD056",
      "txHash": "0xe0ffb2e35d501222116406fadfbd4d7091180253d4a90e5049659c46e15c42fd",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:30"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:31"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:34"
          },
          {
            "label": "totalBurned",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:35"
          },
          {
            "label": "maxTransferPerWindow",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:39"
          },
          {
            "label": "maxTransactionsPerWindow",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:40"
          },
          {
            "label": "userRateLimits",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(RateLimitData)4102_storage)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)294_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)489_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)553_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_struct(RateLimitData)4102_storage)": {
            "label": "mapping(address => struct LookCoin.RateLimitData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_struct(RateLimitData)4102_storage": {
            "label": "struct LookCoin.RateLimitData",
            "members": [
              {
                "label": "transferAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "transactionCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "windowStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "93ed241eb5f86824dbf516fcd3df2a838e280fbf85e96d4a403bb6cb7a9e175e": {
      "address": "0x84D4e17EDfFc4693aFf272BA4ED86963CE8BB19E",
      "txHash": "0x47e369e20f668875a6d7461ef6a004b7aef4ba3eab4612f07d0f1389c8ab3115",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILookCoin)2676",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:78"
          },
          {
            "label": "messageBus",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMessageBus)2702",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:79"
          },
          {
            "label": "remoteModules",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint64,t_address)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:80"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:81"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:82"
          },
          {
            "label": "processedTransfers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:83"
          },
          {
            "label": "feePercentage",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:86"
          },
          {
            "label": "minFee",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:87"
          },
          {
            "label": "maxFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:88"
          },
          {
            "label": "feeCollector",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)296_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)360_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(ILookCoin)2676": {
            "label": "contract ILookCoin",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageBus)2702": {
            "label": "contract IMessageBus",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_address)": {
            "label": "mapping(uint64 => address)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f3d0956bb9bf0c33b7f4ce11197e35aeb7444309c533aebe56d35ea6ca73b692": {
      "address": "0x21d5AaB5f993B9A6F1202219d81AABC6e50A3224",
      "txHash": "0xd8851240302b4a1dec52eed32d82203fa84851acd2e25fa48e739dfddc0417ce",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "ibcConfig",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(IBCConfig)3739_storage",
            "contract": "IBCModule",
            "src": "contracts/bridges/IBCModule.sol:44"
          },
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(ILookCoin)3698",
            "contract": "IBCModule",
            "src": "contracts/bridges/IBCModule.sol:47"
          },
          {
            "label": "vaultAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "IBCModule",
            "src": "contracts/bridges/IBCModule.sol:48"
          },
          {
            "label": "processedPackets",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "IBCModule",
            "src": "contracts/bridges/IBCModule.sol:49"
          },
          {
            "label": "lockedBalances",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IBCModule",
            "src": "contracts/bridges/IBCModule.sol:50"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IBCModule",
            "src": "contracts/bridges/IBCModule.sol:53"
          },
          {
            "label": "isValidator",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IBCModule",
            "src": "contracts/bridges/IBCModule.sol:54"
          },
          {
            "label": "validatorThreshold",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "IBCModule",
            "src": "contracts/bridges/IBCModule.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)296_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)360_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(ILookCoin)3698": {
            "label": "contract ILookCoin",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(IBCConfig)3739_storage": {
            "label": "struct IBCModule.IBCConfig",
            "members": [
              {
                "label": "channelId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "portId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeoutHeight",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timeoutTimestamp",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "minValidators",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "unbondingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1f053e77350e109d0b0204a8e4fb5b60bb845cfd65c0fd2b6ca1d2ea866a7db3": {
      "address": "0xbCb0a67E981490dDb8833D2F1B33A9dBB1a7A0f4",
      "txHash": "0xa744205bfc50c52f4ea3bd8f252f37a69bf8c6506b37d8639c0458d42c781b9e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "chainSupplies",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint16,t_struct(ChainSupply)10994_storage)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:40"
          },
          {
            "label": "bridgeContracts",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_array(t_address)dyn_storage)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:41"
          },
          {
            "label": "supportedChains",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint16)dyn_storage",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:42"
          },
          {
            "label": "reconciliationInterval",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:45"
          },
          {
            "label": "toleranceThreshold",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:46"
          },
          {
            "label": "lastReconciliationTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:47"
          },
          {
            "label": "totalExpectedSupply",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:48"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "7",
            "type": "t_bool",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:51"
          },
          {
            "label": "pausedBridges",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:52"
          },
          {
            "label": "requiredSignatures",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:55"
          },
          {
            "label": "updateSignatures",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:56"
          },
          {
            "label": "updateSignatureCount",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)756_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint16 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(ChainSupply)10994_storage)": {
            "label": "mapping(uint16 => struct SupplyOracle.ChainSupply)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainSupply)10994_storage": {
            "label": "struct SupplyOracle.ChainSupply",
            "members": [
              {
                "label": "totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockedSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "circulatingSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "updateCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "10af78343f1037d280f461293126b2850987c0a01193d15541c34c81dedb2e7e": {
      "address": "0xCC29079424F48ecb569B79E3257d736ea4e7FDee",
      "txHash": "0x1b8801d5c2381cf7a89c7bf82a82de3ddda18c69a027944620ee90e9f4abd7d1",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILayerZeroEndpoint)2969",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:83"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:85"
          },
          {
            "label": "gasForDestinationLzReceive",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:87"
          },
          {
            "label": "processedNonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:89"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:93"
          },
          {
            "label": "totalBurned",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:95"
          },
          {
            "label": "crossChainRouter",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ICrossChainRouter)4375",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:99"
          },
          {
            "label": "authorizedBridges",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:101"
          },
          {
            "label": "hyperlaneMailbox",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)47_storage",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:106"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)36_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)46_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)36_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)306_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)157_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)501_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)565_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)36_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_contract(ICrossChainRouter)4375": {
            "label": "contract ICrossChainRouter",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpoint)2969": {
            "label": "contract ILayerZeroEndpoint",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))": {
            "label": "mapping(uint16 => mapping(uint64 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)36_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2d4ce8695e5ed5f78c88cdd4eef4945b2cf2bd2c249c5d0b46033efc1779bbea": {
      "address": "0xc86539388a0BA2ee5C41BFEcA8ef96bebBcB84A1",
      "txHash": "0x27b22cdee350045538d50a7f4fb6234a84b21db9ebb77ee435883def236f04a0",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILookCoin)5322",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:82"
          },
          {
            "label": "messageBus",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMessageBus)5348",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:84"
          },
          {
            "label": "remoteModules",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint64,t_address)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:86"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:88"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:90"
          },
          {
            "label": "processedTransfers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:92"
          },
          {
            "label": "transfers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_struct(BridgeTransfer)7410_storage)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:94"
          },
          {
            "label": "feePercentage",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:98"
          },
          {
            "label": "minFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:100"
          },
          {
            "label": "maxFee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:102"
          },
          {
            "label": "feeCollector",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)756_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)820_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(ILookCoin)5322": {
            "label": "contract ILookCoin",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageBus)5348": {
            "label": "contract IMessageBus",
            "numberOfBytes": "20"
          },
          "t_enum(TransferStatus)7386": {
            "label": "enum ILookBridgeModule.TransferStatus",
            "members": [
              "Pending",
              "Completed",
              "Failed",
              "Refunded"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(BridgeTransfer)7410_storage)": {
            "label": "mapping(bytes32 => struct ILookBridgeModule.BridgeTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_address)": {
            "label": "mapping(uint64 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeTransfer)7410_storage": {
            "label": "struct ILookBridgeModule.BridgeTransfer",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "destinationChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "protocol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(TransferStatus)7386",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7489e8ba940f324dbf1a6a8761b5c1bab7cd713df815207e2b979a6527218446": {
      "address": "0xeDBeBE4A1c3467C90A2AF1c246f8826E3A52C048",
      "txHash": "0xf6568552b7c6930ccb50b7e88dfd4c2507a553138af171997a55427957ecae15",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILayerZeroEndpoint)3892",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:85"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:87"
          },
          {
            "label": "gasForDestinationLzReceive",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:89"
          },
          {
            "label": "processedNonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:91"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:95"
          },
          {
            "label": "totalBurned",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:97"
          },
          {
            "label": "crossChainRouter",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ICrossChainRouter)7379",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:101"
          },
          {
            "label": "authorizedBridges",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:103"
          },
          {
            "label": "hyperlaneMailbox",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:105"
          },
          {
            "label": "hyperlaneGasPaymaster",
            "offset": 0,
            "slot": "9",
            "type": "t_contract(IInterchainGasPaymaster)34",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:107"
          },
          {
            "label": "supportedHyperlaneDomains",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint32,t_bool)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:109"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)561_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)756_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)820_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_contract(ICrossChainRouter)7379": {
            "label": "contract ICrossChainRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IInterchainGasPaymaster)34": {
            "label": "contract IInterchainGasPaymaster",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpoint)3892": {
            "label": "contract ILayerZeroEndpoint",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))": {
            "label": "mapping(uint16 => mapping(uint64 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "910a0056eec4161c63c67d42269064b90399de6e1e85c449434adcad09870637": {
      "address": "0x4c68d641ebd088A8826F6A7FF63eF97DAa6d3f18",
      "txHash": "0x0c579a210eb7352d80c748a0e43916ede3051dc2f7669defb56e74c9b9bb85f8",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "protocols",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_enum(Protocol)2031,t_struct(ProtocolInfo)4218_storage)",
            "contract": "ProtocolRegistry",
            "src": "contracts/xchain/ProtocolRegistry.sol:27"
          },
          {
            "label": "chainSupport",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_enum(Protocol)2031,t_mapping(t_uint256,t_struct(ChainSupport)4225_storage))",
            "contract": "ProtocolRegistry",
            "src": "contracts/xchain/ProtocolRegistry.sol:28"
          },
          {
            "label": "protocolConfigs",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Protocol)2031,t_bytes_storage)",
            "contract": "ProtocolRegistry",
            "src": "contracts/xchain/ProtocolRegistry.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ProtocolRegistry",
            "src": "contracts/xchain/ProtocolRegistry.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(Protocol)2031": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "XERC20",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Protocol)2031,t_bytes_storage)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)2031,t_mapping(t_uint256,t_struct(ChainSupport)4225_storage))": {
            "label": "mapping(enum ICrossChainRouter.Protocol => mapping(uint256 => struct ProtocolRegistry.ChainSupport))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)2031,t_struct(ProtocolInfo)4218_storage)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => struct ProtocolRegistry.ProtocolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainSupport)4225_storage)": {
            "label": "mapping(uint256 => struct ProtocolRegistry.ChainSupport)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ChainSupport)4225_storage": {
            "label": "struct ProtocolRegistry.ChainSupport",
            "members": [
              {
                "label": "supported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "config",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProtocolInfo)4218_storage": {
            "label": "struct ProtocolRegistry.ProtocolInfo",
            "members": [
              {
                "label": "moduleAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "deprecated",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "registeredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastHealthCheck",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "39991ceabbfabe4ec519eb1bb23383770240d5fc44a367c41493072fbed4b16e": {
      "address": "0x44593586064df45DeF2f5f2509fF8AA61d9d9dfA",
      "txHash": "0xc0f1990e3de2a2efec32e2ffe651f3e2105af102b9494e2c08a1582d52eb0e3f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "protocolModules",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_enum(Protocol)1902,t_address)",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:24"
          },
          {
            "label": "feeCache",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Protocol)1902,t_struct(FeeCache)2624_storage))",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:25"
          },
          {
            "label": "chainGasPrices",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(ChainGasPrice)2629_storage)",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:26"
          },
          {
            "label": "protocolMultipliers",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Protocol)1902,t_uint256)",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:31"
          },
          {
            "label": "protocolBaseFees",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_enum(Protocol)1902,t_uint256)",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)50_storage",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_enum(Protocol)1902": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "XERC20",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Protocol)1902,t_address)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)1902,t_struct(FeeCache)2624_storage)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => struct FeeManager.FeeCache)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)1902,t_uint256)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Protocol)1902,t_struct(FeeCache)2624_storage))": {
            "label": "mapping(uint256 => mapping(enum ICrossChainRouter.Protocol => struct FeeManager.FeeCache))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainGasPrice)2629_storage)": {
            "label": "mapping(uint256 => struct FeeManager.ChainGasPrice)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainGasPrice)2629_storage": {
            "label": "struct FeeManager.ChainGasPrice",
            "members": [
              {
                "label": "gasPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(FeeCache)2624_storage": {
            "label": "struct FeeManager.FeeCache",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "valid",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "89f29902b798b6b65d01a5323498e5ff79cccf6cecd39f45e521878e4aaf8ce5": {
      "address": "0xdc279800234d8dF09Fcd66Ff93aA5A8212B24908",
      "txHash": "0xb60c2ee0a66e5d5d3cc21ca7d198b37dcfb710340a67cb9d862a76a67544e782",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_userTransactions",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_struct(UserTransactionData)2180_storage)",
            "contract": "RateLimiter",
            "src": "contracts/security/RateLimiter.sol:25"
          },
          {
            "label": "rateLimitEnabled",
            "offset": 0,
            "slot": "1",
            "type": "t_bool",
            "contract": "RateLimiter",
            "src": "contracts/security/RateLimiter.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)48_storage",
            "contract": "RateLimiter",
            "src": "contracts/security/RateLimiter.sol:29"
          },
          {
            "label": "protocolConfigs",
            "offset": 0,
            "slot": "50",
            "type": "t_mapping(t_enum(Protocol)1902,t_struct(ProtocolSecurityConfig)3216_storage)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:34"
          },
          {
            "label": "protocolPaused",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_enum(Protocol)1902,t_bool)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:35"
          },
          {
            "label": "userProtocolVolume",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_enum(Protocol)1902,t_uint256))",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:36"
          },
          {
            "label": "suspiciousActivityCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:37"
          },
          {
            "label": "anomalyThreshold",
            "offset": 0,
            "slot": "54",
            "type": "t_struct(AnomalyThreshold)3223_storage",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:39"
          },
          {
            "label": "globalDailyLimit",
            "offset": 0,
            "slot": "57",
            "type": "t_uint256",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:40"
          },
          {
            "label": "globalDailyVolume",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:41"
          },
          {
            "label": "lastResetTime",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:42"
          },
          {
            "label": "emergencyPaused",
            "offset": 0,
            "slot": "60",
            "type": "t_bool",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:44"
          },
          {
            "label": "blockedTransfers",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "62",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)296_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_enum(Protocol)1902": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "XERC20",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_enum(Protocol)1902,t_uint256))": {
            "label": "mapping(address => mapping(enum ICrossChainRouter.Protocol => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserTransactionData)2180_storage)": {
            "label": "mapping(address => struct RateLimiter.UserTransactionData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)1902,t_bool)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)1902,t_struct(ProtocolSecurityConfig)3216_storage)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => struct SecurityManager.ProtocolSecurityConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)1902,t_uint256)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AnomalyThreshold)3223_storage": {
            "label": "struct SecurityManager.AnomalyThreshold",
            "members": [
              {
                "label": "volumeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frequencyThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeWindow",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProtocolSecurityConfig)3216_storage": {
            "label": "struct SecurityManager.ProtocolSecurityConfig",
            "members": [
              {
                "label": "paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dailyLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "transactionLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cooldownPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UserTransactionData)2180_storage": {
            "label": "struct RateLimiter.UserTransactionData",
            "members": [
              {
                "label": "timestamps",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amounts",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "windowStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "bb2c149014823e27e8d5722f7a00b78018fb79242e6bddfca10d6634183f1799": {
      "address": "0x6287Eff52690d7104F0d43726a56c336c175263b",
      "txHash": "0x16b9f04feb5df39778cfe357a079a6d8bc0e2d5cdd7f48f33d4a105d323818a6",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "protocolModules",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_enum(Protocol)2031,t_address)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:23"
          },
          {
            "label": "protocolActive",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_enum(Protocol)2031,t_bool)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:24"
          },
          {
            "label": "chainProtocolSupport",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Protocol)2031,t_bool))",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:25"
          },
          {
            "label": "defaultRoutes",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_enum(Protocol)2031)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:26"
          },
          {
            "label": "transferProtocol",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_enum(Protocol)2031)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:27"
          },
          {
            "label": "feeManager",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:29"
          },
          {
            "label": "securityManager",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:30"
          },
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)296_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)360_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_enum(Protocol)2031": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "XERC20",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_enum(Protocol)2031)": {
            "label": "mapping(bytes32 => enum ICrossChainRouter.Protocol)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)2031,t_address)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)2031,t_bool)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(Protocol)2031)": {
            "label": "mapping(uint256 => enum ICrossChainRouter.Protocol)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Protocol)2031,t_bool))": {
            "label": "mapping(uint256 => mapping(enum ICrossChainRouter.Protocol => bool))",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3484298c15aeefca6bab9514ef3a6b860b08970f1a9cad1bd7fe400fd6005140": {
      "address": "0x83afAB87bc6C95eE7c4826E5fF0B68A5A6490f08",
      "txHash": "0x79186ec0dab445a0988670cd06b459d45316d1fc7853bdd7f8f359391aee09ba",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILayerZeroEndpoint)4948",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:79"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:81"
          },
          {
            "label": "gasForDestinationLzReceive",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:83"
          },
          {
            "label": "processedNonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:85"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:89"
          },
          {
            "label": "totalBurned",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:91"
          },
          {
            "label": "crossChainRouter",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ICrossChainRouter)9451",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:95"
          },
          {
            "label": "hyperlaneMailbox",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:97"
          },
          {
            "label": "hyperlaneGasPaymaster",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IInterchainGasPaymaster)34",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:99"
          },
          {
            "label": "supportedHyperlaneDomains",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint32,t_bool)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:101"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)46_storage",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)561_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)756_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)820_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_contract(ICrossChainRouter)9451": {
            "label": "contract ICrossChainRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IInterchainGasPaymaster)34": {
            "label": "contract IInterchainGasPaymaster",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpoint)4948": {
            "label": "contract ILayerZeroEndpoint",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))": {
            "label": "mapping(uint16 => mapping(uint64 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4132d0560cc73c657d0050498207963b6ed360d8fee61381f709eaa133c80ffe": {
      "address": "0x021426305E63BedcD5c1303bb443e1a2ea5cBB12",
      "txHash": "0xc4a72fdc18d48b26d79decd08181e22f9f1df425fc6771a7bfed8b704b1fb044",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILookCoin)9635",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:79"
          },
          {
            "label": "messageBus",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMessageBus)6205",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:81"
          },
          {
            "label": "remoteModules",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint64,t_address)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:83"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:85"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:87"
          },
          {
            "label": "processedTransfers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:89"
          },
          {
            "label": "transfers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_struct(BridgeTransfer)9483_storage)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:91"
          },
          {
            "label": "feePercentage",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:95"
          },
          {
            "label": "minFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:97"
          },
          {
            "label": "maxFee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:99"
          },
          {
            "label": "feeCollector",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)756_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)820_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(ILookCoin)9635": {
            "label": "contract ILookCoin",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageBus)6205": {
            "label": "contract IMessageBus",
            "numberOfBytes": "20"
          },
          "t_enum(TransferStatus)9459": {
            "label": "enum ILookBridgeModule.TransferStatus",
            "members": [
              "Pending",
              "Completed",
              "Failed",
              "Refunded"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(BridgeTransfer)9483_storage)": {
            "label": "mapping(bytes32 => struct ILookBridgeModule.BridgeTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_address)": {
            "label": "mapping(uint64 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeTransfer)9483_storage": {
            "label": "struct ILookBridgeModule.BridgeTransfer",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "destinationChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "protocol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(TransferStatus)9459",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4bbef2f17da04be7a48c5a416651bf43c7e73aeb0e6eb82e349fa68f7710edda": {
      "address": "0x36E8335d78C43ceC174b8aa7ccE8037bc00FDE4A",
      "txHash": "0xcbc1dd245fba97ed01a6278be89921db07defaa75e567222c2090cc4fa850f77",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "protocols",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_enum(Protocol)9297,t_struct(ProtocolInfo)13437_storage)",
            "contract": "ProtocolRegistry",
            "src": "contracts/xchain/ProtocolRegistry.sol:27"
          },
          {
            "label": "chainSupport",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_enum(Protocol)9297,t_mapping(t_uint256,t_struct(ChainSupport)13444_storage))",
            "contract": "ProtocolRegistry",
            "src": "contracts/xchain/ProtocolRegistry.sol:28"
          },
          {
            "label": "protocolConfigs",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Protocol)9297,t_bytes_storage)",
            "contract": "ProtocolRegistry",
            "src": "contracts/xchain/ProtocolRegistry.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ProtocolRegistry",
            "src": "contracts/xchain/ProtocolRegistry.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(Protocol)9297": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Protocol)9297,t_bytes_storage)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)9297,t_mapping(t_uint256,t_struct(ChainSupport)13444_storage))": {
            "label": "mapping(enum ICrossChainRouter.Protocol => mapping(uint256 => struct ProtocolRegistry.ChainSupport))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)9297,t_struct(ProtocolInfo)13437_storage)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => struct ProtocolRegistry.ProtocolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainSupport)13444_storage)": {
            "label": "mapping(uint256 => struct ProtocolRegistry.ChainSupport)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ChainSupport)13444_storage": {
            "label": "struct ProtocolRegistry.ChainSupport",
            "members": [
              {
                "label": "supported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "config",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProtocolInfo)13437_storage": {
            "label": "struct ProtocolRegistry.ProtocolInfo",
            "members": [
              {
                "label": "moduleAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "deprecated",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "registeredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastHealthCheck",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "219741e8c9bad88f8dfb4a47eb75f095bad0be6eb1c07ddc8cb92d32371ebd38": {
      "address": "0xBE86dafe0837eE9F32ca381F3C52B686c4f2BFFc",
      "txHash": "0x6cd362b296b1bab07554dbf8d98c14237b4e56af0556e6e6c6c90db3c1941ea7",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "protocolModules",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_enum(Protocol)7138,t_address)",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:24"
          },
          {
            "label": "feeCache",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Protocol)7138,t_struct(FeeCache)8789_storage))",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:25"
          },
          {
            "label": "chainGasPrices",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(ChainGasPrice)8794_storage)",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:26"
          },
          {
            "label": "protocolMultipliers",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(Protocol)7138,t_uint256)",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:31"
          },
          {
            "label": "protocolBaseFees",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_enum(Protocol)7138,t_uint256)",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)50_storage",
            "contract": "FeeManager",
            "src": "contracts/xchain/FeeManager.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_enum(Protocol)7138": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(Protocol)7138,t_address)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)7138,t_struct(FeeCache)8789_storage)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => struct FeeManager.FeeCache)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)7138,t_uint256)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Protocol)7138,t_struct(FeeCache)8789_storage))": {
            "label": "mapping(uint256 => mapping(enum ICrossChainRouter.Protocol => struct FeeManager.FeeCache))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainGasPrice)8794_storage)": {
            "label": "mapping(uint256 => struct FeeManager.ChainGasPrice)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainGasPrice)8794_storage": {
            "label": "struct FeeManager.ChainGasPrice",
            "members": [
              {
                "label": "gasPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(FeeCache)8789_storage": {
            "label": "struct FeeManager.FeeCache",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "valid",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "27555048aa98bb8eeb060f7ed44abae08d3ab9a902698474e30c097ed4a20d68": {
      "address": "0x3878A28759cb0240e7DfB0A5B81E3e9D3aBe8fB4",
      "txHash": "0xfc9915336050cd5646f9c29642d50b5e2194431959a36e052ecc557dd3f25c15",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_userTransactions",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_struct(UserTransactionData)5885_storage)",
            "contract": "RateLimiter",
            "src": "contracts/security/RateLimiter.sol:25"
          },
          {
            "label": "rateLimitEnabled",
            "offset": 0,
            "slot": "1",
            "type": "t_bool",
            "contract": "RateLimiter",
            "src": "contracts/security/RateLimiter.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)48_storage",
            "contract": "RateLimiter",
            "src": "contracts/security/RateLimiter.sol:29"
          },
          {
            "label": "protocolConfigs",
            "offset": 0,
            "slot": "50",
            "type": "t_mapping(t_enum(Protocol)5548,t_struct(ProtocolSecurityConfig)8621_storage)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:34"
          },
          {
            "label": "protocolPaused",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_enum(Protocol)5548,t_bool)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:35"
          },
          {
            "label": "userProtocolVolume",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_enum(Protocol)5548,t_uint256))",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:36"
          },
          {
            "label": "suspiciousActivityCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:37"
          },
          {
            "label": "anomalyThreshold",
            "offset": 0,
            "slot": "54",
            "type": "t_struct(AnomalyThreshold)8628_storage",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:39"
          },
          {
            "label": "globalDailyLimit",
            "offset": 0,
            "slot": "57",
            "type": "t_uint256",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:40"
          },
          {
            "label": "globalDailyVolume",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:41"
          },
          {
            "label": "lastResetTime",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:42"
          },
          {
            "label": "emergencyPaused",
            "offset": 0,
            "slot": "60",
            "type": "t_bool",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:44"
          },
          {
            "label": "blockedTransfers",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "62",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)756_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_enum(Protocol)5548": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_enum(Protocol)5548,t_uint256))": {
            "label": "mapping(address => mapping(enum ICrossChainRouter.Protocol => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserTransactionData)5885_storage)": {
            "label": "mapping(address => struct RateLimiter.UserTransactionData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)5548,t_bool)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)5548,t_struct(ProtocolSecurityConfig)8621_storage)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => struct SecurityManager.ProtocolSecurityConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)5548,t_uint256)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AnomalyThreshold)8628_storage": {
            "label": "struct SecurityManager.AnomalyThreshold",
            "members": [
              {
                "label": "volumeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frequencyThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeWindow",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProtocolSecurityConfig)8621_storage": {
            "label": "struct SecurityManager.ProtocolSecurityConfig",
            "members": [
              {
                "label": "paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dailyLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "transactionLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cooldownPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UserTransactionData)5885_storage": {
            "label": "struct RateLimiter.UserTransactionData",
            "members": [
              {
                "label": "timestamps",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amounts",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "windowStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2bbce328067443dcd0df0f831745ad11c0df971619938f90a25db76a4c293102": {
      "address": "0x5a24e0a0dC675721134840493811958F7e3bFfA3",
      "txHash": "0x495a309bf19e82e302b55199f09e5f59cddc9618d237c3e1f026eac2c76f779c",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_userTransactions",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_struct(UserTransactionData)2083_storage)",
            "contract": "RateLimiter",
            "src": "contracts/security/RateLimiter.sol:25"
          },
          {
            "label": "rateLimitEnabled",
            "offset": 0,
            "slot": "1",
            "type": "t_bool",
            "contract": "RateLimiter",
            "src": "contracts/security/RateLimiter.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)48_storage",
            "contract": "RateLimiter",
            "src": "contracts/security/RateLimiter.sol:29"
          },
          {
            "label": "protocolConfigs",
            "offset": 0,
            "slot": "50",
            "type": "t_mapping(t_enum(Protocol)1901,t_struct(ProtocolSecurityConfig)2539_storage)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:34"
          },
          {
            "label": "protocolPaused",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_enum(Protocol)1901,t_bool)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:35"
          },
          {
            "label": "userProtocolVolume",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_enum(Protocol)1901,t_uint256))",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:36"
          },
          {
            "label": "suspiciousActivityCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:37"
          },
          {
            "label": "anomalyThreshold",
            "offset": 0,
            "slot": "54",
            "type": "t_struct(AnomalyThreshold)2546_storage",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:39"
          },
          {
            "label": "globalDailyLimit",
            "offset": 0,
            "slot": "57",
            "type": "t_uint256",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:40"
          },
          {
            "label": "globalDailyVolume",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:41"
          },
          {
            "label": "lastResetTime",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:42"
          },
          {
            "label": "emergencyPaused",
            "offset": 0,
            "slot": "60",
            "type": "t_bool",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:44"
          },
          {
            "label": "blockedTransfers",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "62",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SecurityManager",
            "src": "contracts/xchain/SecurityManager.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)296_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_enum(Protocol)1901": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_enum(Protocol)1901,t_uint256))": {
            "label": "mapping(address => mapping(enum ICrossChainRouter.Protocol => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserTransactionData)2083_storage)": {
            "label": "mapping(address => struct RateLimiter.UserTransactionData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)1901,t_bool)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)1901,t_struct(ProtocolSecurityConfig)2539_storage)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => struct SecurityManager.ProtocolSecurityConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)1901,t_uint256)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AnomalyThreshold)2546_storage": {
            "label": "struct SecurityManager.AnomalyThreshold",
            "members": [
              {
                "label": "volumeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frequencyThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeWindow",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProtocolSecurityConfig)2539_storage": {
            "label": "struct SecurityManager.ProtocolSecurityConfig",
            "members": [
              {
                "label": "paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dailyLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "transactionLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cooldownPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UserTransactionData)2083_storage": {
            "label": "struct RateLimiter.UserTransactionData",
            "members": [
              {
                "label": "timestamps",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amounts",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "windowStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "760d506d3a9334747f93bcd74d24769319570d859664a3494d14a9777bd21e23": {
      "address": "0x3Dd3BD8650CE3D3bd9d033A0A3391e25879a0b8c",
      "txHash": "0x474977dc7c326ee9588ca0f37719351f5fade19555ee0b37baacf2cb1f7bdd93",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "protocolModules",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_enum(Protocol)9297,t_address)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:24"
          },
          {
            "label": "protocolActive",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_enum(Protocol)9297,t_bool)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:25"
          },
          {
            "label": "chainProtocolSupport",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Protocol)9297,t_bool))",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:26"
          },
          {
            "label": "defaultRoutes",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_enum(Protocol)9297)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:27"
          },
          {
            "label": "transferProtocol",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_enum(Protocol)9297)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:28"
          },
          {
            "label": "feeManager",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:30"
          },
          {
            "label": "securityManager",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:31"
          },
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)756_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)820_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_enum(Protocol)9297": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_enum(Protocol)9297)": {
            "label": "mapping(bytes32 => enum ICrossChainRouter.Protocol)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)9297,t_address)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)9297,t_bool)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(Protocol)9297)": {
            "label": "mapping(uint256 => enum ICrossChainRouter.Protocol)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Protocol)9297,t_bool))": {
            "label": "mapping(uint256 => mapping(enum ICrossChainRouter.Protocol => bool))",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8393d6e2a11229831e84b4418e15bebbdcdb7a005525c19c3a32a5c894302440": {
      "address": "0x91bE23f7BEBB7BF4a3A5F7B56E0C24f004FFe4cC",
      "txHash": "0xa6bfb377daa98d567edcd92177cb81f51f2333749b9cb34037ab3a3cc3717e8b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "chainSupplies",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint16,t_struct(ChainSupply)1954_storage)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:40"
          },
          {
            "label": "bridgeContracts",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_array(t_address)dyn_storage)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:41"
          },
          {
            "label": "supportedChains",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint16)dyn_storage",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:42"
          },
          {
            "label": "reconciliationInterval",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:45"
          },
          {
            "label": "toleranceThreshold",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:46"
          },
          {
            "label": "lastReconciliationTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:47"
          },
          {
            "label": "totalExpectedSupply",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:48"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "7",
            "type": "t_bool",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:51"
          },
          {
            "label": "pausedBridges",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:52"
          },
          {
            "label": "requiredSignatures",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:55"
          },
          {
            "label": "updateSignatures",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:56"
          },
          {
            "label": "updateSignatureCount",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)296_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint16 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(ChainSupply)1954_storage)": {
            "label": "mapping(uint16 => struct SupplyOracle.ChainSupply)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainSupply)1954_storage": {
            "label": "struct SupplyOracle.ChainSupply",
            "members": [
              {
                "label": "totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockedSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "circulatingSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "updateCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "00872408797ec51e645595587de3fa5cc105072ea42cf9bbb0509868b28684e1": {
      "address": "0x6E54Fc6936c01D1c53f7E3A9C69922D74085134F",
      "txHash": "0x809f65487be37388863e540d0c4ef075d61d39d35b3494256c4de83799dd3021",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "chainSupplies",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint32,t_struct(ChainSupply)1939_storage)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:33"
          },
          {
            "label": "bridgeContracts",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint32,t_array(t_address)dyn_storage)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:34"
          },
          {
            "label": "supportedChains",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint32)dyn_storage",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:35"
          },
          {
            "label": "reconciliationInterval",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:38"
          },
          {
            "label": "toleranceThreshold",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:39"
          },
          {
            "label": "lastReconciliationTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:40"
          },
          {
            "label": "totalExpectedSupply",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:41"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "7",
            "type": "t_bool",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:44"
          },
          {
            "label": "pausedBridges",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:45"
          },
          {
            "label": "requiredSignatures",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:48"
          },
          {
            "label": "updateSignatures",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:49"
          },
          {
            "label": "updateSignatureCount",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SupplyOracle",
            "src": "contracts/security/SupplyOracle.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)296_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainSupply)1939_storage)": {
            "label": "mapping(uint32 => struct SupplyOracle.ChainSupply)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainSupply)1939_storage": {
            "label": "struct SupplyOracle.ChainSupply",
            "members": [
              {
                "label": "totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockedSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "circulatingSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "updateCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9afbdc01fe76535a2c90290e0e073145932007703be12aa4bc73c7d5353862ca": {
      "address": "0x1FAdB06eb9552F60b86eA564119ABc2fC8c42b3f",
      "txHash": "0x3cb498b6f3b685f8560e9ca8e5eafe11544809fedb587724f10c23e8f2e1ab69",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILayerZeroEndpoint)2955",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:76"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:78"
          },
          {
            "label": "gasForDestinationLzReceive",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:80"
          },
          {
            "label": "processedNonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:82"
          },
          {
            "label": "enforcedOptions",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:84"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:88"
          },
          {
            "label": "totalBurned",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:90"
          },
          {
            "label": "crossChainRouter",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(ICrossChainRouter)4423",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)48_storage",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:97"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)294_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)489_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)553_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_contract(ICrossChainRouter)4423": {
            "label": "contract ICrossChainRouter",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpoint)2955": {
            "label": "contract ILayerZeroEndpoint",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))": {
            "label": "mapping(uint16 => mapping(uint64 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a011e14dbafda4610214186b3e3e26867948277ecac7b8a432d3e1cff798b6d2": {
      "address": "0x27BB94e9d5756Bb6Aebf5c85A6bDa3b6FeafCB59",
      "txHash": "0x3184ba5ec0171fa77a79e51b1ae2b01defce39cf697e22ae4b6177476c4cfe5b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILookCoin)3278",
            "contract": "LayerZeroModule",
            "src": "contracts/bridges/LayerZeroModule.sol:59"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ILayerZeroEndpointV2)2157",
            "contract": "LayerZeroModule",
            "src": "contracts/bridges/LayerZeroModule.sol:60"
          },
          {
            "label": "transfers",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_struct(BridgeTransfer)3126_storage)",
            "contract": "LayerZeroModule",
            "src": "contracts/bridges/LayerZeroModule.sol:62"
          },
          {
            "label": "eidToChainId",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "LayerZeroModule",
            "src": "contracts/bridges/LayerZeroModule.sol:63"
          },
          {
            "label": "chainIdToEid",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "LayerZeroModule",
            "src": "contracts/bridges/LayerZeroModule.sol:64"
          },
          {
            "label": "trustedRemotes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint32,t_bytes32)",
            "contract": "LayerZeroModule",
            "src": "contracts/bridges/LayerZeroModule.sol:65"
          },
          {
            "label": "defaultOptions",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint32,t_bytes_storage)",
            "contract": "LayerZeroModule",
            "src": "contracts/bridges/LayerZeroModule.sol:68"
          },
          {
            "label": "defaultGasLimit",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LayerZeroModule",
            "src": "contracts/bridges/LayerZeroModule.sol:69"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LayerZeroModule",
            "src": "contracts/bridges/LayerZeroModule.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)296_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)360_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ILayerZeroEndpointV2)2157": {
            "label": "contract ILayerZeroEndpointV2",
            "numberOfBytes": "20"
          },
          "t_contract(ILookCoin)3278": {
            "label": "contract ILookCoin",
            "numberOfBytes": "20"
          },
          "t_enum(TransferStatus)3102": {
            "label": "enum ILookBridgeModule.TransferStatus",
            "members": [
              "Pending",
              "Completed",
              "Failed",
              "Refunded"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(BridgeTransfer)3126_storage)": {
            "label": "mapping(bytes32 => struct ILookBridgeModule.BridgeTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_bytes32)": {
            "label": "mapping(uint32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_bytes_storage)": {
            "label": "mapping(uint32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeTransfer)3126_storage": {
            "label": "struct ILookBridgeModule.BridgeTransfer",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "destinationChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "protocol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(TransferStatus)3102",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cfc586452226118cabe8e042c3199ac0cadc1940148de07912e41da31efa0a89": {
      "address": "0xf0C4c6548E6d734D0CDfc51B219B25973Bd3Fa66",
      "txHash": "0x688d9e8d0d953e7b3480cbd224bf1a0535c3ee1889a79fa12de24950e1f1051d",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILookCoin)7476",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:79"
          },
          {
            "label": "messageBus",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMessageBus)4053",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:81"
          },
          {
            "label": "remoteModules",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint64,t_address)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:83"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:85"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:87"
          },
          {
            "label": "processedTransfers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:89"
          },
          {
            "label": "transfers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_struct(BridgeTransfer)7324_storage)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:91"
          },
          {
            "label": "feePercentage",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:95"
          },
          {
            "label": "minFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:97"
          },
          {
            "label": "maxFee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:99"
          },
          {
            "label": "feeCollector",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)563_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)627_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(ILookCoin)7476": {
            "label": "contract ILookCoin",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageBus)4053": {
            "label": "contract IMessageBus",
            "numberOfBytes": "20"
          },
          "t_enum(TransferStatus)7300": {
            "label": "enum ILookBridgeModule.TransferStatus",
            "members": [
              "Pending",
              "Completed",
              "Failed",
              "Refunded"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(BridgeTransfer)7324_storage)": {
            "label": "mapping(bytes32 => struct ILookBridgeModule.BridgeTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_address)": {
            "label": "mapping(uint64 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeTransfer)7324_storage": {
            "label": "struct ILookBridgeModule.BridgeTransfer",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "destinationChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "protocol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(TransferStatus)7300",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7d65210e5eb9228f4027cfe845dae0b56c5125328ad3f11b72ea9b52051cf48a": {
      "address": "0x1B431437C3d1f422E2a10B0fdeEF681b1432C5E3",
      "txHash": "0x1ec4712742b641b77c837a1c225c2cdba84c03e3cdba9316e23096a232459459",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILookCoin)3422",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:31"
          },
          {
            "label": "mailbox",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMailbox)240",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:32"
          },
          {
            "label": "gasPaymaster",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IInterchainGasPaymaster)34",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:33"
          },
          {
            "label": "transfers",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_struct(BridgeTransfer)3270_storage)",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:35"
          },
          {
            "label": "domainToChainId",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:36"
          },
          {
            "label": "chainIdToDomain",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:37"
          },
          {
            "label": "trustedSenders",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint32,t_bytes32)",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:38"
          },
          {
            "label": "interchainSecurityModule",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:41"
          },
          {
            "label": "requiredGasAmount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HyperlaneModule",
            "src": "contracts/bridges/HyperlaneModule.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)563_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)627_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IInterchainGasPaymaster)34": {
            "label": "contract IInterchainGasPaymaster",
            "numberOfBytes": "20"
          },
          "t_contract(ILookCoin)3422": {
            "label": "contract ILookCoin",
            "numberOfBytes": "20"
          },
          "t_contract(IMailbox)240": {
            "label": "contract IMailbox",
            "numberOfBytes": "20"
          },
          "t_enum(TransferStatus)3246": {
            "label": "enum ILookBridgeModule.TransferStatus",
            "members": [
              "Pending",
              "Completed",
              "Failed",
              "Refunded"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(BridgeTransfer)3270_storage)": {
            "label": "mapping(bytes32 => struct ILookBridgeModule.BridgeTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_bytes32)": {
            "label": "mapping(uint32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeTransfer)3270_storage": {
            "label": "struct ILookBridgeModule.BridgeTransfer",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "destinationChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "protocol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(TransferStatus)3246",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b0754397c968ea7937bcc78f8a83da3b53baf9a8e1ec07ce9fa7d6bf2290380d": {
      "address": "0xdEF5504002F72832b595eF22F2d37fF19fCC7327",
      "txHash": "0x3a342371b56d79ec5175d2e9dcc2f02718a2ac7d8c042106848fafe75dc1ae6a",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "protocolModules",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_enum(Protocol)7138,t_address)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:24"
          },
          {
            "label": "protocolActive",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_enum(Protocol)7138,t_bool)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:25"
          },
          {
            "label": "chainProtocolSupport",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Protocol)7138,t_bool))",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:26"
          },
          {
            "label": "defaultRoutes",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_enum(Protocol)7138)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:27"
          },
          {
            "label": "transferProtocol",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_enum(Protocol)7138)",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:28"
          },
          {
            "label": "feeManager",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:30"
          },
          {
            "label": "securityManager",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:31"
          },
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CrossChainRouter",
            "src": "contracts/xchain/CrossChainRouter.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)291_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)301_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)412_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)563_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)627_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)291_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_enum(Protocol)7138": {
            "label": "enum ICrossChainRouter.Protocol",
            "members": [
              "LayerZero",
              "Celer",
              "Hyperlane"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_enum(Protocol)7138)": {
            "label": "mapping(bytes32 => enum ICrossChainRouter.Protocol)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)7138,t_address)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Protocol)7138,t_bool)": {
            "label": "mapping(enum ICrossChainRouter.Protocol => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(Protocol)7138)": {
            "label": "mapping(uint256 => enum ICrossChainRouter.Protocol)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Protocol)7138,t_bool))": {
            "label": "mapping(uint256 => mapping(enum ICrossChainRouter.Protocol => bool))",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)291_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f5910ac13938de1794ae70086db660d16268b9b501b9f6076bb0185328a72f0d": {
      "address": "0x01f8970386163e16D57191da85dCb8c43d24efe2",
      "txHash": "0xd9c72367ae644a5e277020759c39fb67c487ca80231d597f3c215c4c4667a3f7",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lookCoin",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILookCoin)4144",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:74"
          },
          {
            "label": "messageBus",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMessageBus)2691",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:76"
          },
          {
            "label": "remoteModules",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint64,t_address)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:78"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:80"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:82"
          },
          {
            "label": "processedTransfers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:84"
          },
          {
            "label": "transfers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_struct(BridgeTransfer)3992_storage)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:86"
          },
          {
            "label": "feePercentage",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:90"
          },
          {
            "label": "minFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:92"
          },
          {
            "label": "maxFee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:94"
          },
          {
            "label": "feeCollector",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:96"
          },
          {
            "label": "supportedChains",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint64,t_bool)",
            "contract": "CelerIMModule",
            "src": "contracts/bridges/CelerIMModule.sol:100"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)296_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)360_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(ILookCoin)4144": {
            "label": "contract ILookCoin",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageBus)2691": {
            "label": "contract IMessageBus",
            "numberOfBytes": "20"
          },
          "t_enum(TransferStatus)3968": {
            "label": "enum ILookBridgeModule.TransferStatus",
            "members": [
              "Pending",
              "Completed",
              "Failed",
              "Refunded"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(BridgeTransfer)3992_storage)": {
            "label": "mapping(bytes32 => struct ILookBridgeModule.BridgeTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_address)": {
            "label": "mapping(uint64 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeTransfer)3992_storage": {
            "label": "struct ILookBridgeModule.BridgeTransfer",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "destinationChain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "protocol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(TransferStatus)3968",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2a90412e081de691ceecd9d5f29179bae93b12ed7d5d36968d5dbc847073405f": {
      "address": "0x6342E03B4E99915016F9e9bceFaa7B559BB15b03",
      "txHash": "0x81ad98bcab8f66801e4ba45b4541e09e31c3b98db480f4758187661d5e911f0b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILayerZeroEndpoint)9059",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:78"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:80"
          },
          {
            "label": "gasForDestinationLzReceive",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:82"
          },
          {
            "label": "processedNonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:84"
          },
          {
            "label": "enforcedOptions",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:86"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:90"
          },
          {
            "label": "totalBurned",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:92"
          },
          {
            "label": "crossChainRouter",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(ICrossChainRouter)10534",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)48_storage",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)746_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)294_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)565_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)619_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)683_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_contract(ICrossChainRouter)10534": {
            "label": "contract ICrossChainRouter",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpoint)9059": {
            "label": "contract ILayerZeroEndpoint",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))": {
            "label": "mapping(uint16 => mapping(uint64 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c4310c091b3edcc4ab82370bf53e5891046350fedfb82a7240a468095c9ca218": {
      "address": "0x5838A9f96E72eA83317D155F31AB660832533bAB",
      "txHash": "0x2189753ad21a5da8a158996b47ed1443a782b4bb060245aba28ec228ce592200",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILayerZeroEndpoint)9059",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:78"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:80"
          },
          {
            "label": "gasForDestinationLzReceive",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:82"
          },
          {
            "label": "processedNonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:84"
          },
          {
            "label": "enforcedOptions",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:86"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:90"
          },
          {
            "label": "totalBurned",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:92"
          },
          {
            "label": "crossChainRouter",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(ICrossChainRouter)10528",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)48_storage",
            "contract": "LookCoin",
            "src": "contracts/LookCoin.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)746_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)294_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)565_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)619_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)683_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_contract(ICrossChainRouter)10528": {
            "label": "contract ICrossChainRouter",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpoint)9059": {
            "label": "contract ILayerZeroEndpoint",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint64,t_bool))": {
            "label": "mapping(uint16 => mapping(uint64 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
