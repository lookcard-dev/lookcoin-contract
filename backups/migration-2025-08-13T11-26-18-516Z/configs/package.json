{
  "name": "lookcoin-contract",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "compile": "hardhat compile",
    "test": "hardhat test",
    "test:unit": "hardhat test test/unit/**/*.test.ts",
    "test:unit:lookcoin": "hardhat test test/unit/lookcoin/*.test.ts",
    "test:unit:bridges": "hardhat test test/unit/bridges/**/*.test.ts",
    "test:unit:router": "hardhat test test/unit/router/*.test.ts",
    "test:unit:security": "hardhat test test/unit/security/*.test.ts",
    "test:integration": "hardhat test test/integration/consolidatedDeployment.test.ts test/integration/crossChainFlows.test.ts test/integration/security.test.ts",
    "test:integration:flows": "hardhat test test/integration/crossChainFlows.test.ts",
    "test:integration:security": "hardhat test test/integration/security.test.ts",
    "test:integration:deployment": "hardhat test test/integration/consolidatedDeployment.test.ts",
    "test:edge-cases": "hardhat test test/edge-case-scenarios.ts",
    "test:edge-cases:report": "tsx scripts/test/run-edge-case-tests.ts",
    "test:gas": "REPORT_GAS=true hardhat test",
    "coverage": "hardhat coverage",
    "coverage:unit": "hardhat coverage --testfiles 'test/unit/**/*.test.ts'",
    "coverage:integration": "hardhat coverage --testfiles 'test/integration/*.test.ts'",
    "deploy:optimism-sepolia": "hardhat run scripts/deploy.ts --network opSepolia",
    "deploy:optimism-mainnet": "hardhat run scripts/deploy.ts --network optimism",
    "deploy:sapphire": "hardhat run scripts/deploy.ts --network sapphire",
    "deploy:sapphire-testnet": "hardhat run scripts/deploy.ts --network sapphireTestnet",
    "deploy:bsc-testnet": "hardhat run scripts/deploy.ts --network bscTestnet",
    "deploy:bsc-mainnet": "hardhat run scripts/deploy.ts --network bsc",
    "deploy:base-sepolia": "hardhat run scripts/deploy.ts --network baseSepolia",
    "deploy:base-mainnet": "hardhat run scripts/deploy.ts --network base",
    "deploy:akashic-mainnet": "hardhat run scripts/deploy.ts --network akashic",
    "configure:bsc-testnet": "hardhat run scripts/configure.ts --network bscTestnet",
    "configure:bsc-mainnet": "hardhat run scripts/configure.ts --network bsc",
    "configure:base-sepolia": "hardhat run scripts/configure.ts --network baseSepolia",
    "configure:base-mainnet": "hardhat run scripts/configure.ts --network base",
    "configure:optimism-sepolia": "hardhat run scripts/configure.ts --network opSepolia",
    "configure:optimism-mainnet": "hardhat run scripts/configure.ts --network optimism",
    "configure:sapphire-mainnet": "hardhat run scripts/configure.ts --network sapphire",
    "configure:sapphire-testnet": "hardhat run scripts/configure.ts --network sapphireTestnet",
    "configure:akashic-mainnet": "hardhat run scripts/configure.ts --network akashic",
    "setup:bsc-testnet": "hardhat run scripts/setup.ts --network bscTestnet",
    "setup:bsc-mainnet": "hardhat run scripts/setup.ts --network bsc",
    "setup:base-sepolia": "hardhat run scripts/setup.ts --network baseSepolia",
    "setup:base-mainnet": "hardhat run scripts/setup.ts --network base",
    "setup:optimism-sepolia": "hardhat run scripts/setup.ts --network opSepolia",
    "setup:optimism-mainnet": "hardhat run scripts/setup.ts --network optimism",
    "setup:sapphire-mainnet": "hardhat run scripts/setup.ts --network sapphire",
    "setup:sapphire-testnet": "hardhat run scripts/setup.ts --network sapphireTestnet",
    "setup:akashic-mainnet": "hardhat run scripts/setup.ts --network akashic",
    "deploy:timelock": "hardhat run scripts/deployTimelock.ts",
    "reconcile": "hardhat run scripts/reconcile.ts",
    "benchmark": "tsx scripts/benchmark/run-performance-benchmarks.ts",
    "benchmark:quick": "tsx scripts/benchmark/run-performance-benchmarks.ts -- --quick",
    "benchmark:memory": "tsx scripts/benchmark/run-performance-benchmarks.ts -- --memory-only",
    "benchmark:concurrent": "tsx scripts/benchmark/run-performance-benchmarks.ts -- --concurrent",
    "benchmark:production": "tsx scripts/benchmark/run-performance-benchmarks.ts -- --production",
    "benchmark:gc": "node --expose-gc -r tsx/esm scripts/benchmark/run-performance-benchmarks.ts",
    "benchmark:validate": "tsx scripts/benchmark/validate-benchmark-setup.ts",
    "reconcile:bsc-testnet": "hardhat run scripts/reconcile.ts --network bscTestnet",
    "reconcile:bsc-mainnet": "hardhat run scripts/reconcile.ts --network bsc",
    "reconcile:base-sepolia": "hardhat run scripts/reconcile.ts --network baseSepolia",
    "reconcile:base-mainnet": "hardhat run scripts/reconcile.ts --network base",
    "reconcile:optimism-sepolia": "hardhat run scripts/reconcile.ts --network opSepolia",
    "reconcile:optimism-mainnet": "hardhat run scripts/reconcile.ts --network optimism",
    "reconcile:sapphire-mainnet": "hardhat run scripts/reconcile.ts --network sapphire",
    "verify": "hardhat verify",
    "size": "hardhat size-contracts",
    "lint": "eslint --ext .ts .",
    "format": "prettier --write .",
    "type-check": "tsc --noEmit",
    "lint:config": "grep -r --include='*.ts' --include='*.js' --exclude-dir=node_modules --exclude-dir=artifacts --exclude-dir=cache --exclude-dir=typechain-types -E '(0x[a-fA-F0-9]{40}|channel-[0-9]+|transfer|[0-9]{5,})' . | grep -v hardhat.config.ts | grep -v testConfig.ts || echo 'No hardcoded config found!'",
    "audit": "hardhat run scripts/security/runSecurityAudit.ts",
    "security:scan": "hardhat run scripts/security/vulnerabilityScanner.ts",
    "security:test": "hardhat test test/unit/security/*.test.ts test/integration/security.test.ts",
    "security:monitor": "echo 'Run continuous security monitoring'",
    "lint:natspec": "echo 'NatSpec documentation validation'",
    "docs:generate": "hardhat docgen",
    "docs:validate": "echo 'Documentation completeness check'",
    "deploy:resume": "hardhat run scripts/deploy.ts --resume",
    "deploy:debug": "DEBUG_DEPLOYMENT=true hardhat run scripts/deploy.ts",
    "deploy:simple": "BSC_SIMPLE_MODE=true hardhat run scripts/deploy.ts",
    "test:migration": "hardhat test test/migration/**/*.test.ts --timeout 60000",
    "test:migration:data-integrity": "hardhat test test/migration/data-integrity/*.test.ts --timeout 60000",
    "test:migration:functional": "hardhat test test/migration/functional/*.test.ts --timeout 60000",
    "test:migration:performance": "hardhat test test/migration/performance/*.test.ts --timeout 120000",
    "test:migration:cross-network": "hardhat test test/migration/cross-network/*.test.ts --timeout 60000",
    "test:migration:rollback": "hardhat test test/migration/migration-rollback/*.test.ts --timeout 60000",
    "test:migration:integration": "hardhat test test/migration/integration/*.test.ts --timeout 60000",
    "test:migration:benchmark": "DEBUG_MIGRATION_TESTS=true hardhat test test/migration/performance/*.test.ts --timeout 300000",
    "test:migration:coverage": "hardhat coverage --testfiles 'test/migration/**/*.test.ts'",
    "migration:validate": "npx tsx scripts/migration/04-compare-leveldb-unified.ts",
    "backup:create": "tsx scripts/backup/create-migration-backup.ts",
    "backup:verify": "tsx scripts/backup/verify-backup-integrity.ts",
    "backup:verify:latest": "tsx scripts/backup/verify-backup-integrity.ts",
    "backup:restore": "echo 'See RESTORE_PROCEDURES.md in backup directory for restore instructions'",
    "backup:validate": "tsx scripts/backup/validate-backup-system.ts"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@ethereum-sourcify/bytecode-utils": "1.2.8",
    "@hyperlane-xyz/core": "^9.0.2",
    "@hyperlane-xyz/sdk": "^16.0.0",
    "@layerzerolabs/lz-evm-messagelib-v2": "^3.0.115",
    "@layerzerolabs/lz-evm-protocol-v2": "^3.0.115",
    "@layerzerolabs/oft-evm": "^3.2.0",
    "@openzeppelin/contracts": "^5.0.2",
    "@openzeppelin/contracts-upgradeable": "^5.0.2",
    "chalk": "^5.5.0",
    "level": "^10.0.0"
  },
  "devDependencies": {
    "@layerzerolabs/oapp-evm-upgradeable": "^0.1.2",
    "@layerzerolabs/oft-evm-upgradeable": "^3.1.0",
    "@nomicfoundation/hardhat-chai-matchers": "^2.0.0",
    "@nomicfoundation/hardhat-ethers": "^3.0.9",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.0",
    "@nomicfoundation/hardhat-toolbox": "^6.0.0",
    "@nomicfoundation/hardhat-verify": "^2.0.14",
    "@openzeppelin/hardhat-upgrades": "^3.9.1",
    "@typechain/ethers-v6": "^0.5.0",
    "@typechain/hardhat": "^9.0.0",
    "@types/aws-lambda": "^8.10.152",
    "@types/chai": "^4.3.5",
    "@types/minimatch": "^5.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": ">=18.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "aws-lambda": "^1.0.7",
    "chai": "^4.2.0",
    "dotenv": "^16.0.0",
    "eslint": "^8.0.0",
    "ethers": "^6.15.0",
    "hardhat": "^2.25.0",
    "hardhat-contract-sizer": "^2.10.0",
    "hardhat-gas-reporter": "^2.3.0",
    "prettier": "^3.0.0",
    "solidity-coverage": "^0.8.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.4",
    "typechain": "^8.3.0",
    "typescript": ">=4.5.0"
  },
  "overrides": {
    "@layerzerolabs/oft-evm": {
      "ethers": "^6.15.0"
    },
    "@layerzerolabs/oft-evm-upgradeable": {
      "ethers": "^6.15.0"
    },
    "@layerzerolabs/lz-evm-protocol-v2": {
      "ethers": "^6.15.0"
    },
    "@layerzerolabs/lz-evm-messagelib-v2": {
      "ethers": "^6.15.0"
    }
  }
}
